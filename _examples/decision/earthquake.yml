name: Earthquake Decision Network
info: >-
  A network for the decision on evacuating a city,
  based on warnings from a seismic sensor.


  The actor can observe the sensor warning, as well as the quality of sensor maintenance.
  To trigger a definitive decision, set these two to some value by clicking on the bars.


  In this example, multiple utility nodes (green) are used.
  "Material damage" depends on the actual earthquake,
  "Human damage" depends on the earthquake and the decision,
  and "Evacuation cost" only depends on the decision.
  The sum of all three is optimized.
variables:

- variable: Earthquake next week
  position: [1, 0]
  color: gray
  outcomes: [strong, slight, none]
  table: 
  - [1, 5, 94]

- variable: Sensor warning
  position: [1, 8]
  given: [Sensor maintenance, Earthquake next week]
  outcomes: [strong, slight, none]
  table: 
  - [90, 10,  0] # strong, good
  - [ 5, 90,  5] # slight, good
  - [ 0, 10, 90] # none,   good
  - [60, 40,  0] # strong, poor
  - [20, 60, 20] # slight, poor
  - [ 0, 40, 60] # none,   poor

- variable: Sensor maintenance
  position: [1, 16]
  outcomes: [good, poor]
  table: 
  - [50, 50]

- variable: Evacuate
  position: [37, 13]
  type: decision
  outcomes: [yes, no]
  given: [Sensor maintenance, Sensor warning]

- variable: Material damage
  position: [40, 0]
  given: [Earthquake next week]
  type: utility
  outcomes: [value]
  table: 
  - [-1000] # strong
  - [ -250] # slight
  - [    0] # none

- variable: Human damage
  position: [40, 4]
  given: [Evacuate, Earthquake next week]
  type: utility
  outcomes: [value]
  table: 
  - [ -100] # strong, e+
  - [  -20] # slight, e+
  - [    0] # none, e+
  - [-5000] # strong, e-
  - [ -250] # slight, e-
  - [    0] # none, e-

- variable: Evacuation cost
  position: [40, 20]
  given: [Evacuate]
  type: utility
  outcomes: [value]
  table: 
  - [-100] # e+
  - [-0] # e-
